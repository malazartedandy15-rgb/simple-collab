<script>
document.addEventListener('DOMContentLoaded', () => {
    const currentMonthYearHeader = document.getElementById('current-month-year');
    const calendarDaysGrid = document.getElementById('calendar-days');
    const prevMonthBtn = document.getElementById('prev-month-btn');
    const nextMonthBtn = document.getElementById('next-month-btn');
    const form = document.getElementById('add-task-form');
    const taskNameInput = document.getElementById('task-name');
    const taskDateInput = document.getElementById('task-date');
    const upcomingTasksList = document.getElementById('upcoming-tasks-list');

    let currentDate = new Date();
    let tasks = JSON.parse(localStorage.getItem('study-tasks')) || [];

    function renderCalendar() {
        calendarDaysGrid.innerHTML = '';
        currentMonthYearHeader.textContent = currentDate.toLocaleString('default', { month: 'long', year: 'numeric' });
        const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).getDay();
        const daysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();

        // Add empty cells for preceding days
        for (let i = 0; i < firstDayOfMonth; i++) {
            const emptyDay = document.createElement('div');
            emptyDay.classList.add('day', 'empty');
            calendarDaysGrid.appendChild(emptyDay);
        }

        // Add days of the month
        for (let day = 1; day <= daysInMonth; day++) {
            const dayElement = document.createElement('div');
            dayElement.classList.add('day');
            dayElement.textContent = day;

            const fullDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), day);
            const formattedDate = fullDate.toISOString().split('T')[0];

            // Highlight today
            if (fullDate.toDateString() === new Date().toDateString()) {
                dayElement.classList.add('today');
            }

            // Highlight days with tasks
            if (tasks.some(task => task.date === formattedDate)) {
                dayElement.classList.add('has-task');
            }
            
            calendarDaysGrid.appendChild(dayElement);
        }
    }

    function renderUpcomingTasks() {
        upcomingTasksList.innerHTML = '';
        const sortedTasks = tasks.sort((a, b) => new Date(a.date) - new Date(b.date));
        sortedTasks.forEach((task, index) => {
            const listItem = document.createElement('li');
            listItem.innerHTML = `
                <span>${task.name} - ${task.date}</span>
                <button class="delete-btn" data-index="${index}">Delete</button>
            `;
            upcomingTasksList.appendChild(listItem);
        });
        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', deleteTask);
        });
    }

    function addTask(e) {
        e.preventDefault();
        const taskName = taskNameInput.value.trim();
        const taskDate = taskDateInput.value;
        if (taskName && taskDate) {
            tasks.push({ name: taskName, date: taskDate });
            localStorage.setItem('study-tasks', JSON.stringify(tasks));
            taskNameInput.value = '';
            taskDateInput.value = '';
            renderCalendar();
            renderUpcomingTasks();
        }
    }

    function deleteTask(e) {
        const index = e.target.dataset.index;
        tasks.splice(index, 1);
        localStorage.setItem('study-tasks', JSON.stringify(tasks));
        renderCalendar();
        renderUpcomingTasks();
    }

    prevMonthBtn.addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() - 1);
        renderCalendar();
    });

    nextMonthBtn.addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() + 1);
        renderCalendar();
    });

    form.addEventListener('submit', addTask);

    renderCalendar();
    renderUpcomingTasks();
});
</script>
